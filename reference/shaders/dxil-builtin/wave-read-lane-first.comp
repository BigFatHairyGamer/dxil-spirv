#version 460
#extension GL_KHR_shader_subgroup_ballot : require
layout(local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

layout(set = 0, binding = 0, r32ui) uniform writeonly uimageBuffer _8;

uint _30;

void main()
{
    uint _29 = (gl_GlobalInvocationID.x * 12u) >> 2u;
    imageStore(_8, int(_29), uvec4(subgroupBroadcastFirst(gl_GlobalInvocationID.x)));
    imageStore(_8, int(_29 + 1u), uvec4(subgroupBroadcastFirst(gl_GlobalInvocationID.y)));
    imageStore(_8, int(_29 + 2u), uvec4(subgroupBroadcastFirst(gl_GlobalInvocationID.z)));
}


#if 0
// SPIR-V disassembly
; SPIR-V
; Version: 1.3
; Generator: Unknown(30017); 21022
; Bound: 39
; Schema: 0
OpCapability Shader
OpCapability ImageBuffer
OpCapability GroupNonUniformBallot
OpMemoryModel Logical GLSL450
OpEntryPoint GLCompute %3 "main" %12
OpExecutionMode %3 LocalSize 64 1 1
OpName %3 "main"
OpDecorate %8 DescriptorSet 0
OpDecorate %8 Binding 0
OpDecorate %12 BuiltIn GlobalInvocationId
%1 = OpTypeVoid
%2 = OpTypeFunction %1
%5 = OpTypeInt 32 0
%6 = OpTypeImage %5 Buffer 0 0 0 2 R32ui
%7 = OpTypePointer UniformConstant %6
%8 = OpVariable %7 UniformConstant
%10 = OpTypeVector %5 3
%11 = OpTypePointer Input %10
%12 = OpVariable %11 Input
%13 = OpTypePointer Input %5
%15 = OpConstant %5 0
%18 = OpConstant %5 1
%21 = OpConstant %5 2
%24 = OpConstant %5 3
%28 = OpConstant %5 12
%31 = OpTypeVector %5 4
%3 = OpFunction %1 None %2
%4 = OpLabel
%30 = OpUndef %5
OpBranch %37
%37 = OpLabel
%9 = OpLoad %6 %8
%14 = OpAccessChain %13 %12 %15
%16 = OpLoad %5 %14
%17 = OpAccessChain %13 %12 %18
%19 = OpLoad %5 %17
%20 = OpAccessChain %13 %12 %21
%22 = OpLoad %5 %20
%23 = OpGroupNonUniformBroadcastFirst %5 %24 %16
%25 = OpGroupNonUniformBroadcastFirst %5 %24 %19
%26 = OpGroupNonUniformBroadcastFirst %5 %24 %22
%27 = OpIMul %5 %16 %28
%29 = OpShiftRightLogical %5 %27 %21
%32 = OpCompositeConstruct %31 %23 %23 %23 %23
OpImageWrite %9 %29 %32
%33 = OpCompositeConstruct %31 %25 %25 %25 %25
%34 = OpIAdd %5 %29 %18
OpImageWrite %9 %34 %33
%35 = OpCompositeConstruct %31 %26 %26 %26 %26
%36 = OpIAdd %5 %29 %21
OpImageWrite %9 %36 %35
OpReturn
OpFunctionEnd
#endif
